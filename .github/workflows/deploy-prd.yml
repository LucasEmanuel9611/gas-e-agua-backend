# Nome do workflow que aparecer치 na aba "Actions" do GitHub
name: Deploy to VPS (PRD)

# Quando esse workflow ser치 executado
on:
  push:
    branches:
      - master # dispara ap칩s merge na master

jobs:
  deploy:
    runs-on: ubuntu-latest # Job rodar치 em m치quina virtual Ubuntu

    steps:
      # Etapa 1: Fazer checkout (clonar) o c칩digo do reposit칩rio
      - name: Checkout code
        uses: actions/checkout@v3

      # Etapa 2: Configurar SSH para conectar na VPS
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh  # Cria diret칩rio .ssh se n칚o existir
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa  # Salva chave privada
          chmod 600 ~/.ssh/id_rsa  # Define permiss칫es corretas (seguran칞a)
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts  # Adiciona VPS aos hosts conhecidos

      # Etapa 3: Criar backup do banco ANTES do deploy (CR칈TICO em produ칞칚o)
      - name: Backup database
        uses: ./.github/actions/backup
        with:
          environment: prd
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          vps-host: ${{ secrets.VPS_HOST }}
          vps-user: ${{ secrets.VPS_USER }}

      # Etapa 4: Deploy em PRODU칂츾O (build, migrations, containers)
      - name: Deploy application
        id: deploy
        uses: ./.github/actions/deploy
        with:
          environment: prd
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          vps-host: ${{ secrets.VPS_HOST }}
          vps-user: ${{ secrets.VPS_USER }}
          branch: master

      # Etapa 5: Verificar sa칰de da aplica칞칚o (10 tentativas em produ칞칚o)
      - name: Health check
        uses: ./.github/actions/health-check
        with:
          environment: prd
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          vps-host: ${{ secrets.VPS_HOST }}
          vps-user: ${{ secrets.VPS_USER }}
          max-retries: "10" # Mais tentativas em produ칞칚o

      # Etapa 6: Notificar sucesso (Discord + Slack)
      - name: Notify success
        if: success()
        uses: ./.github/actions/notify
        with:
          status: success
          environment: prd
          message: "Production deploy completed in ${{ steps.deploy.outputs.deploy-time }}s"
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
          slack-webhook: ${{ secrets.SLACK_WEBHOOK_URL }}

      # Etapa 7: Notificar FALHA CR칈TICA em produ칞칚o (Discord + Slack)
      - name: Notify failure
        if: failure()
        uses: ./.github/actions/notify
        with:
          status: failure
          environment: prd
          message: "游뚿 PRODUCTION DEPLOY FAILED - Immediate action required!"
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
          slack-webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
