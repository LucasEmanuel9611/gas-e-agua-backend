services:
  # MySQL Database (DEV)
  mysql:
    image: mysql:8.0
    container_name: gas-e-agua-mysql-dev
    restart: unless-stopped
    env_file:
      - .env.dev
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root123}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-gas_e_agua_dev}
      MYSQL_USER: ${MYSQL_USER:-gas_e_agua}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-gas_e_agua123}
    ports:
      - "3308:3306"
    volumes:
      - mysql_data_dev:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - app-network-dev
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Node.js Application (DEV)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gas-e-agua-app-dev
    restart: unless-stopped
    ports:
      - "3334:3333"
    env_file:
      - .env.dev
    environment:
      NODE_ENV: development
      PORT: 3333
      DATABASE_URL: mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-key}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
    volumes:
      - ./logs-dev:/app/logs
    networks:
      - app-network-dev
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:3333/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis (DEV)
  redis:
    image: redis:7-alpine
    container_name: gas-e-agua-redis-dev
    restart: unless-stopped
    ports:
      - "6381:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - app-network-dev
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data_dev:
    driver: local
  redis_data_dev:
    driver: local

networks:
  app-network-dev:
    driver: bridge


