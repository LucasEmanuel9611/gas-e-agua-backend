import { SendOrderPaymentNotificationsUseCase as NewSendOrderPaymentNotificationsUseCase } from "@modules/notifications/useCases/sendOrderPaymentNotifications/sendOrderPaymentNotificationsUseCase";
import cron from "node-cron";
import { container } from "tsyringe";

export function scheduleSendOrderPaymentNotifications() {
  cron.schedule("0 12 * * *", async () => {
    console.log("[CRON] Iniciando verifica√ß√£o de notifica√ß√µes de pagamento...");
    console.log("[CRON] Tipos de notifica√ß√µes que ser√£o verificadas:");
    console.log("  üìÖ EXPIRATION: Pedidos pr√≥ximos do vencimento (29-30 dias)");
    console.log("  ‚ö†Ô∏è  OVERDUE: Pedidos vencidos (a cada 5 dias ap√≥s vencimento)");

    const sendOrderPaymentNotificationsUseCase = container.resolve(
      NewSendOrderPaymentNotificationsUseCase
    );

    const result = await sendOrderPaymentNotificationsUseCase.execute();

    if (result.total > 0) {
      console.log(
        `[CRON - Notifica√ß√µes de pagamento] - ${result.total} notifica√ß√µes enfileiradas:`
      );
      console.log(
        `  üìÖ EXPIRATION: ${result.expirationNotifications} notifica√ß√µes de vencimento`
      );
      console.log(
        `  ‚ö†Ô∏è  OVERDUE: ${result.overdueNotifications} notifica√ß√µes de pedidos vencidos`
      );

      if (result.errors.length > 0) {
        console.warn(
          `[CRON - Notifica√ß√µes de pagamento] - ${result.errors.length} erros encontrados:`,
          result.errors
        );
      }
    } else {
      console.log(
        "[CRON - Notifica√ß√µes de pagamento] - Nenhuma notifica√ß√£o enfileirada."
      );
    }
  });
}
